type: edu
files:
  - name: src/phonebook/Main.kt
    visible: true
    text: |
      package phonebook
      
      import java.io.File
      
      fun main() {
          println("Start searching...")
      
          val startTime = System.currentTimeMillis()
      
          val findFile = File("D:\\find.txt")
          val directoryFile = File("D:\\directory.txt")
          val toFind = findFile.readLines()
          val repository = directoryFile.readLines()
      
          var found = 0
      
          for (directory in  repository) {
              for (find in toFind) {
                  if(find in directory) {
                      ++found
                      break
                  }
              }
              if(found == toFind.size) break
      
          }
      
          val endTime = System.currentTimeMillis()
          val total = endTime - startTime
          val timeTaken = String.format("%d min. %d sec. %d ms.", total / 60000, total % 60000 / 1000, total % 1000)
      
          println("Found $found / ${toFind.size} entries. Time taken: $timeTaken")
      
      }
    learner_created: false
  - name: test/PhoneBookTest.java
    visible: false
    text: |
      import org.hyperskill.hstest.stage.StageTest;
      import org.hyperskill.hstest.testcase.CheckResult;
      import org.hyperskill.hstest.testcase.TestCase;
      
      import java.util.Arrays;
      import java.util.List;
      
      public class PhoneBookTest extends StageTest {
      
          @Override
          public List<TestCase> generate() {
              return Arrays.asList(
                  new TestCase().setTimeLimit(30 * 60 * 1000)
              );
          }
      
          @Override
          public CheckResult check(String reply, Object clue) {
              reply = reply.toLowerCase();
              return new CheckResult(
                  reply.contains("start searching")
                      && reply.contains("found")
                      && reply.contains("min.")
                      && reply.contains("sec.")
                      && reply.contains("ms.")
                      && reply.contains("sorting time")
                      && reply.contains("searching time")
                      && reply.contains("linear search")
                      && reply.contains("bubble sort")
                      && reply.contains("jump search"));
          }
      }
    learner_created: false
feedback_link: https://hyperskill.org/projects/86/stages/477/implement#comment
status: Solved
record: 1
